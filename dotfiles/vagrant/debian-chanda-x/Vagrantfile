# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# FOR SHARED FOLDERS INSTALL THIS PLUGIN
# vagrant plugin install vagrant-vbguest
# AND RUN
# vagrant vbguest
# if it succeeds uncoment the shared_folder line
#
# FOR DISK RESISING INSTALL THIS PLUGIN
# vagrant plugin install vagrant-disksize
# if it succeeds uncoment the v.disksize.size line
#

Vagrant.configure("2") do |config|
  config.vm.define "debian-chanda-openbox"
  config.vm.box = "debian/buster64"
  config.vm.hostname = "debian-chanda-openbox"
  config.vm.box_check_update = false
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8000, host: 8000
  config.vm.network "forwarded_port", guest: 3306, host: 3308 
  config.vm.provider "virtualbox" do |v|
    v.gui = true
    v.name = "debian-chanda-openbox"
    v.memory = 2048
    # v.disksize.size = '50GB'
  end
  # config.vm.synced_folder "../shared", "/shared"
  $rootscript = <<-SHELL
    locale-gen "pl_PL.UTF-8"
    export DEBIAN_FRONTEND=noninteractive; apt-get update
    apt-get -qqy upgrade
    apt-get -qqy install autossh atool htop mc vim screen git tig zsh curl jq default-mysql-client python3-pip gnupg2 autojump ncdu silversearcher-ag tmux ranger
    curl -fsSL https://get.docker.com -o- | sh
    usermod -aG docker vagrant
    curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod 744 /usr/local/bin/docker-compose
    # curl https://packages.sury.org/php/apt.gpg | apt-key add -
    # echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list
    # apt-get -qqy update
    # apt-get -qqy install php5.6 php5.6-mysql
  SHELL
  $script = <<-SHELL
    # NVM
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm install v12.14.0
    # ZSH
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    # SNIPPETS
    yes | bash -c "$(curl https://raw.githubusercontent.com/tokozedg/sman/master/install.sh)"
    rm -rf snippets
    # VIM
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    # DOTFILES
    ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
    pip3 install --user dotdrop
    git clone https://github.com/lukaszmalik/dotfiles.git .dotfiles
    ./.dotfiles/dotdrop.sh install -f
    # gpg --gen-key
  SHELL
  $chsh= <<-SHELL
    chsh -s /bin/zsh vagrant
  SHELL
  $rootx= <<-SHELL
    apt-get -y install numix-gtk-theme numix-icon-theme numix-icon-theme-circle obmenu mousepad nitrogen lightdm openbox tint2 lxappearance gmrun snapd thunar terminator meld firefox-esr-l10n-pl iceweasel
    # SNAPD
    snap install hello-world
    snap install --classic code
    # snap install --classic slack
    snap install teams-for-linux
    # snap install postman
    # snap install dbeaver-ce
    snap install chromium
    # apt-get -y install build-essential module-assistant linux-headers-$(uname -r)
    # m-a prepare
    curl https://db.debian.org/fetchkey.cgi?fingerprint=FEDEC1CB337BCF509F43C2243914B532F4DFBE99 | apt-key add
    echo 'deb https://people.debian.org/~lucas/virtualbox-buster/ ./' > /etc/apt/sources.list.d/virtualbox-unofficial.list
    apt-get update
    apt-get -y install virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11
    echo "[SeatDefaults]" >>  /etc/lightdm/lightdm.conf
    echo "autologin-user=vagrant" >>  /etc/lightdm/lightdm.conf
    apt install /vagrant/AppGate-SDP-client.deb ; apt -y --fix-broken install
    chmod 4755 /opt/appgate/chrome-sandbox
  SHELL
  $userx= <<-SHELL
    mkdir -p ~/.config/openbox
    echo 'tint2 &' >> ~/.config/openbox/autostart
    echo 'nitrogen --restore' >> ~/.config/openbox/autostart
  SHELL
  config.vm.provision "shell", inline: $rootscript
  config.vm.provision "shell", inline: $script, privileged: false
  config.vm.provision "shell", inline: $chsh
  config.vm.provision "shell", inline: $rootx
  # config.vm.provision "shell", inline: $userx, privileged: false
end

